:root {
  --clr-bg: white;
  --clr-1: #07D;
  --clr-2: #F28;
  --opc-bg: 1;
}

[data-theme="dark"] {
  --clr-bg: black;
  --opc-bg: 0.6;
}

*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

.bg {
  background-color: var(--clr-bg);
  position: fixed;
  width: 100vw;
  height: 100vh;
}

#bg-color-1, #bg-color-2 {
  position: absolute;
  width: 140vw;
  height: 140vh;
  border-radius: 50%;
  filter: blur(min(50vw, 50vh));
  opacity: var(--opc-bg);
}

#bg-color-1 {
  right: 0;
  top: -70vh;
  background-color: var(--clr-1);
}

#bg-color-2 {
  left: 0;
  bottom: -70vh;
  background-color: var(--clr-2);
}

.blobCont {
  position: absolute;
  width: 100vw;
  height: 100vh;
}

@for $i from 1 through 18 {
  $a: #{$i*90};
  $b: #{$i*90+360};

  .blob:nth-child(#{$i}) {
    animation: move#{$i} 20s infinite linear;
  }

  @keyframes move#{$i} {
    from {
      transform: rotate(#{$a}deg) translate(200px, 0.1px) rotate(-#{$a}deg);
    }
    to {
      transform: rotate(#{$b}deg) translate(200px, 0.1px) rotate(-#{$b}deg);
    }
  }
}

#static-blob-up {
  cy: calc(-300vw + 7vh);
}
#static-blob-bottom {
  cy: calc(300vw + 93vh);
}